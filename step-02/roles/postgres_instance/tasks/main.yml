---
# This playbook contains postgres_instance tasks
#1 - check if db user exists
- name: check if db user {{ db_user }} exists
  shell: su - postgres /bin/bash -c  "psql -c \"SELECT 'existsdbuser' WHERE EXISTS(SELECT * FROM pg_user WHERE usename='{{ db_user }}');\""
  register: check_db_user_exists

#2 - Create user {{ db_user }}
- name: Create user {{ db_user }}
  shell: su - postgres /bin/bash -c  "psql -c \"CREATE USER  {{ db_user }} LOGIN password '{{ db_password }}' CREATEROLE CREATEUSER;\""
  when: "'existsdbuser' not in check_db_user_exists.stdout"
 
 
#3 - check if database exists
- name: Check if database {{ db_name }} exists
  shell: su - postgres /bin/bash -c  "psql -c \"SELECT 'existsdb' WHERE EXISTS(SELECT * FROM pg_database WHERE datname='{{ db_name }}');\""
  register: check_db_exists
  
#4 - Create database {{ db_name }}
- name: Create database {{ db_name }}
  shell: su - postgres /bin/bash -c  "psql -c \"CREATE DATABASE {{ db_name }} OWNER={{ db_user }};\""
  when: "'existsdb' not in check_db_exists.stdout"
  
  
#5 Check if schema exists
- name: Check if schema {{ db_schema }} exists 
  shell: su - postgres /bin/bash -c  "psql {{ db_name }} -c \"SELECT 'existsschema' WHERE EXISTS(SELECT * FROM pg_catalog.pg_namespace WHERE nspname='{{ db_schema }}');\""
  register: check_schema_exists
  
#6 - Create schema {{ db_schema }}
- name: Create schema {{ db_schema }}
  shell: su - postgres /bin/bash -c  "psql {{ db_name }} -c \"CREATE SCHEMA {{ db_schema }} AUTHORIZATION {{ db_user }};\""
  when: "'existsschema' not in check_schema_exists.stdout"