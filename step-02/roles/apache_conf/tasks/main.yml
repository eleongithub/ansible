---
# This playbook contains Apache configuration.

- name: Stop eventual Apache server runing
  service: name=apache state=stopped enabled=no
  ignore_errors: true

- name: Remove eventual Apache from boot service
  shell: insserv -r apache
  ignore_errors: true
  
- name : Remove eventual Apache init script from the system
  file: 
    path: "{{ apache_init_script }}"
    state: absent
  ignore_errors: true
  
- name: Delete user Apache
  user: name={{ apache_user }} state=absent
  ignore_errors: true

- name: Delete group Apache
  group: name={{ apache_user_group }} state=absent
  ignore_errors: true
  
- name: Create Group Apache 
  group: name={{ apache_user_group }} state=present

- name: Create User Apache 
  user: 
    name: "{{ apache_user }}"
    createhome: no 
    group: "{{ apache_user_group }}"
    shell: /bin/false 
    comment: "Web Server"
    state: present
  
- name: Deploy configuration file for Apache
  template: 
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    force: "{{item.force}}"
  with_items: "{{ apache_conf_files }}"
   
- name: Copy Apache init script
  template: 
    src: apache.sh.j2 
    dest: "{{ apache_init_script }}"
    force: yes 
    mode: 0755

- name: Enable Apache init script
  service: name=apache enabled=yes
  
- name: Install Mod Security for Apache
  include: mod_security_main.yml
  
- name: Install certification authority files if mod_ssl is enabled
  include: certifcation_authority_main.yml
  when: "{{ apache_enable_ssl }}"
  
- name: Install Mod JK if mod_jk is enabled
  include: mod_jk_main.yml
  when: "{{ mod_jk_enable }}"
 
- name: Restart Apache
  command: echo "Restart Apache service..."
  notify: 
    - Restart Apache