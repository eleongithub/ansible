---
# This playbook contains tomcat-installation plays that will be run on web server node.

#1 Stop eventual firewall runing
- name: Stop eventual tomcat server runing
  service: name=tomcat state=stopped enabled=no
  ignore_errors: true

#2 Remove eventual tomcat from boot service
- name: Remove eventual tomcat from boot service
  shell: insserv -r tomcat
  ignore_errors: true
  
#3 - Remove eventual tomcat init script from the system
- name : Remove eventual firewall init script from the system
  file: path=/etc/init.d/tomcat state=absent
  ignore_errors: true
  
#4 - Delete User tomcat if exists
- name: Delete User Tomcat 
  user: name={{ tomcat_user }} state=absent
  ignore_errors: true

#5 - Delete Group tomcat if exists
- name: Delete Group Tomcat 
  group: name={{ tomcat_group }} state=absent
  ignore_errors: true
  
#6 - Create Group Tomcat
- name: Create Group Tomcat 
  group: name={{ tomcat_group }} state=present

#7 - Create User Tomcat
- name: Create User Tomcat 
  user: name={{ tomcat_user }} createhome=no group={{ tomcat_group }} shell=/bin/bash state=present
  
#8 - Remove eventual tomcat init script from the system
- name : Remove eventual tomcat init script from the system
  shell: insserv -r tomcat
  ignore_errors: true

#9 - Check tomcat version directory exists
- name : Check tomcat version directory exists
  shell: ls {{ tomcat_version }}
  register: check_tomcat_version_dir_exists
  ignore_errors: true

#10 - Create tomcat version directory if not exists
- name: Create tomcat version directory
  file: path={{ tomcat_version }} owner={{ tomcat_user }} group={{ tomcat_group }} state=directory recurse=yes
  when: check_tomcat_version_dir_exists.rc|int > 0

#11 - Delete the current tomcat link if exists 
- name: Delete the current tomcat home link 
  file: dest={{ tomcat_home }} state=absent
  
#12 - Unzip tomcat archive
- name: Unzip the tomcat archive
  unarchive: src={{ tomcat_tarball_name }} dest="{{ tomcat_version }}/"
  
#13 : Delete unused directories
- name: Delete unused directories
  file: path={{ tomcat_last }}/{{item.path}} state=absent
  with_items:
   - "{{ tomcat_unused_directories }}"

# TODO : Check/Install APR

#13 - Change the owner of tomcat directory.
- name: Change the owner of tomcat directory.
  file: path={{ tomcat_last }} owner={{ tomcat_user }} group={{ tomcat_group }} state=directory recurse=yes
  
#14 - Create link to the new tomcat directory
- name: Create link to the new tomcat directory
  file: src={{ tomcat_last }} path={{ tomcat_home }} owner={{ tomcat_user }} group={{ tomcat_group }} state=link

#15 - name: Configure Tomcat server TODO
  #template: src=server.xml dest=/usr/share/tomcat/conf/
  #notify: restart tomcat

#16 - name: Configure Tomcat users TODO
  #template: src=tomcat-users.xml dest=/usr/share/tomcat/conf/
  #notify: restart tomcat

#17 Copy Tomcat init script
- name: Copy Tomcat init script
  template: src=tomcat.sh dest=/etc/init.d/tomcat mode=0755


#18 Enable/Start Tomcat
- name: Enable/Start Tomcat
  service: name=tomcat state=started enabled=yes

#19 - name: deploy iptables rules to open tomcat port TODO
  #template: src=iptables-save dest=/etc/sysconfig/iptables
  #notify: restart iptables

#20 - name: wait for tomcat to start TODO
  #wait_for: port={{http_port}}