---
# This playbook installs certification authority files.

# Create certification authority (CA) main directory
- name: Create certification authority (CA) main directory
  file: 
    path: "{{ apache_ssl_ca_conf_dir }}"
    state: directory
    owner: root
    group: root
    
# Create CA new certificats directory
- name: Create CA new certificats directory
  file: 
    path: "{{ apache_ssl_ca_conf_dir }}/newcerts"
    state: directory
    owner: root
    group: root
    
# Copy configuration file into CA directory
- name: Copy configuration file into CA directory
  template: 
    src: openssl_ca.conf.j2
    dest: "{{ apache_ssl_ca_conf_dir }}/openssl_ca.conf"
    owner: root
    group: root
    force: yes
    
  
- name: Initialize serial file
  lineinfile:
    dest: "{{ apache_ssl_ca_conf_dir }}/serial"
    create: yes
    regexp: ''
    line: '01'
    owner: root
    group: root
    
- name: Initialize index.txt file
  file: 
    path: "{{ apache_ssl_ca_conf_dir }}/index.txt"
    state: touch
    owner: root
    group: root
  
# Create private Key of the CA.
- name: Create private Key of the CA
  command: >
    openssl genrsa 
      -out {{ apache_ssl_ca_key }} {{ apache_ssl_ca_bits }} 
      -rand file:/dev/random
    

# Protect private Key of the CA (Only read access for root who is the owner)
- name: Protect private Key of the CA (Only read access for root who is the owner)
  file: 
    path: "{{ apache_ssl_ca_key }}"
    mode: 0400 
    owner: root
    group: root
    
# Create X509 Certification for authority
- name: Create X509 Certification for the CA
  command: >
    openssl req -new 
      -x509 
      -key {{ apache_ssl_ca_key }} 
      -out {{ apache_ssl_ca_cert }} 
      -config "{{ apache_ssl_ca_conf_dir }}/openssl_ca.conf" 
      -extensions v3_ca 
      -subj "{{ apache_ssl_ca_subj }}"
  
- name: Restart Apache
  command: echo "Restart Apache service..."
  notify: 
    - Restart Apache