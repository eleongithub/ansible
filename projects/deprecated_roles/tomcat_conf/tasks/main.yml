---
# tasks file for tomcat_conf

- name: Stop eventual tomcat server running
  service:
    name: tomcat
    state: stopped
    enabled: no
  ignore_errors: true

- name: Create Group Tomcat
  group:
    name: "{{ tomcat_conf_group }}"
    state: present

- name: Create User Tomcat
  user:
    name: "{{ tomcat_conf_user }}"
    createhome: no
    group: "{{ tomcat_conf_group }}"
    shell: /bin/bash
    state: present

- name: Change the owner of tomcat versions directory
  file:
    path: "{{ tomcat_conf_versions }}"
    owner: "{{ tomcat_conf_user }}"
    group: "{{ tomcat_conf_group }}"
    recurse: yes

- name: Change the owner of link to the last tomcat directory
  file:
    src: "{{ tomcat_conf_last_version }}"
    path: "{{ tomcat_conf_home }}"
    owner: "{{ tomcat_conf_user }}"
    group: "{{ tomcat_conf_group }}"
    state: link

- name: Create the tomcat configuration directory
  file:
    path: "{{ tomcat_conf_directory }}"
    owner: "{{ tomcat_conf_user }}"
    group: "{{ tomcat_conf_group }}"
    state: directory
    recurse: yes

- name: Deploy configuration Tomcat files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ tomcat_conf_user }}"
    group: "{{ tomcat_conf_group }}"
  with_items:
   - "{{ tomcat_conf_files }}"

- name: Apply OWASP rule to secure Tomcat
  include: owasp.yml

- name: Copy Tomcat init script
  template:
    src: "tomcat.sh.j2"
    dest: "{{ tomcat_conf_init_script }}"
    owner: root
    group: root
    mode: 0755

- name: Add Iptables rule
  include: iptables.yml
  when: tomcat_conf_iptables_enabled

- name: Enable Tomcat service
  service:
    name: tomcat
    enabled: yes

- name: Restart tomcat
  command: echo "Restart Tomcat service"
  notify:
    - Restart tomcat