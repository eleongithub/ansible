---
# This playbook contains ProFTP installation.

- name: Check if proftp user group is on the system
  shell: getent group {{ proftp_user_group }}
  register: proftp_user_group_exists
  ignore_errors: True
  
- name: Create Group proftp user group if not exists 
  group: name={{ proftp_user_group }} state=present
  when: proftp_user_group_exists.rc|int != 0

- name: Check if proftp user is on the system
  shell: id {{ proftp_user }}
  register: proftp_user_exists
  ignore_errors: true
  
- name: Create proftp user if not exists
  user: 
    name: "{{ proftp_user }}"
    createhome: no 
    group: "{{ proftp_user_group }}"
    shell: /bin/false
    comment: "ProFTD Server User"
    state: present
  when: proftp_user_exists.rc|int != 0

  
- name: Deploy ProFTP configuration file
  template: 
    src: proftpd.conf.j2
    dest: "{{ proftp_conf_path }}"
    force: yes

- name: Define user "proftp" and group "proftp" as the owner of configuration directory
  file:
    path: /etc/proftpd
    owner: "{{ proftp_user }}"
    group: "{{ proftp_user_group }}"
    recurse: yes
    
- name: Define owner, group and right on ProFTP configuration files
  file: 
    path: "{{ item.path }}"
    force: "{{ item.force }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items: "{{ proftp_conf_files }}"
  
- name: Restart ProFTP
  command: echo "Restart ProFTP service..."
  notify: 
    - Restart ProFTP 