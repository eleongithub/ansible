---
# This playbook contains ProFTP installation.

- name: Check if ProFTP is installed on the system
  shell: proftpd --version || echo "Unknown ProFTP Server"
  register: proftp_version_result

- name: Purge ProFTPd Server package if present
  apt:
    pkg: "{{ item }}"
    state: absent
    purge: yes
  with_items:
    - "proftpd"
    - "proftpd-basic"
  when: "'{{ proftp_version }}' not in '{{ proftp_version_result.stdout }}'"

- name: Install ProFTPd Server package
  apt:
    pkg: proftpd
    state: present
  when: "'{{ proftp_version }}' not in '{{ proftp_version_result.stdout }}'"

- name: Create Group proftp user group if not exists
  group:
    name: "{{ proftp_user_group }}"
    state: present

- name: Create proftp user if not exists
  user:
    name: "{{ proftp_user }}"
    createhome: no
    group: "{{ proftp_user_group }}"
    shell: /bin/false
    comment: "ProFTD Server User"
    state: present

- name: Deploy ProFTP configuration file
  template:
    src: proftpd.conf.j2
    dest: "{{ proftp_conf_path }}"
    force: yes

- name: Define user "proftp" and group "proftp" as the owner of configuration directory
  file:
    path: /etc/proftpd
    owner: "{{ proftp_user }}"
    group: "{{ proftp_user_group }}"
    recurse: yes

- name: Define owner, group and right on ProFTP configuration files
  file:
    path: "{{ item.path }}"
    force: "{{ item.force }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items: "{{ proftp_conf_files }}"

- name: Allow access to ProFTPd port through firewall
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  with_items: "{{ firewallports }}"
  when: use_ufw_firewall

- name: Restart ProFTP
  command: echo "Restart ProFTP service..."
  notify:
    - Restart ProFTP