#!/bin/bash  
  
# Flush iptables.
iptables -F
  
# Delete chains.
iptables -X
  
# Drop input trafic. 
iptables -P INPUT DROP
  
# Drop all output trafic. 
iptables -P OUTPUT DROP
  
# Drop forward.
iptables -P FORWARD DROP


# Allow open connection to receive input trafic.
iptables -t filter -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
  
# Allow open connection to receive output trafic.
iptables -t filter -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

iptables -A INPUT -p tcp -m multiport --dports 80,443 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -m multiport --dports 80,443 -m conntrack --ctstate ESTABLISHED -j ACCEPT


# Allow input loopback.
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Accept inupt ICMP - PING request 
iptables -t filter -A INPUT -p icmp -j ACCEPT

# Authorize output ICMP - PING request
iptables -t filter -A OUTPUT -p icmp -j ACCEPT


# Authorize HTTP/HTTPS Input & Output connections
iptables -t filter -A OUTPUT -o eth0 -p tcp --dport 80  -j ACCEPT
iptables -t filter -A OUTPUT -o eth0 -p tcp --dport 443 -j ACCEPT
iptables -t filter -A INPUT  -i eth0 -p tcp --sport 80  -j ACCEPT
iptables -t filter -A INPUT  -i eth0 -p tcp --sport 443 -j ACCEPT

# Add a rule for each allow port
{% for allowed_port in firewall_allowed_ports %}
iptables -t filter -A {{ allowed_port.direction }} -p {{ allowed_port.protocol }} --dport {{ allowed_port.port }} -j ACCEPT -m comment --comment "{{ allowed_port.comment }}"
{% endfor %}

# Log input trafic.
{% if firewall_logs_input_trafic %}
iptables -A INPUT -j LOG
{% endif %} 

# Log forward trafic.
{% if firewall_logs_output_trafic %}
iptables -A FORWARD -j LOG 
{% endif %}


exit 0