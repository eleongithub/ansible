---
# This playbook contains Apache installation.
- name: Get Apache version installed on the nodes
  shell: bash "{{ apache_home }}/bin/apachectl" -v 2>&1 | head -n 1 || echo "Unknown Apache Server"
  register: apache_version_result

- name: Stop eventual Apache server runing
  service:
    name: apache
    state: stopped
    enabled: no
  ignore_errors: true
  when: "(apache_version_result is not defined) or ('{{ apache_version }}' not in '{{ apache_version_result.stdout }}')"

- name: Install required librairies
  apt:
    pkg: "{{ item.package }}"
    state: present
  with_items: "{{ apache_required_packages }}"
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"

- name : Check apache versions directory exists
  stat:
    path: "{{ apache_versions }}"
  register: apache_versions_dir_exists
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"

- name: Create apache versions directory
  file:
    path: "{{ apache_versions }}"
    state: directory
  when: "('{{ apache_version }}' not in '{{ apache_version_result.stdout }}') and
         (apache_versions_dir_exists is defined and not apache_versions_dir_exists.stat.exists)"

- name: Delete Apache home directory 
  file:
    path: "{{ apache_home }}"
    state: absent
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"

- name: Create Apache home directory
  file:
    path: "{{ apache_home }}"
    state: directory
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"

- name: Download Apache Archive
  get_url:
    url: "{{ apache_url }}"
    dest: "/tmp/{{ apache_tarball_name }}"
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"

- name: Decompress Apache archive
  unarchive:
    src: "/tmp/{{ apache_tarball_name }}"
    dest: "{{ apache_versions }}/"
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"

- name: Delete Apache archive
  file:
    path: "/tmp/{{ apache_tarball_name }}"
    state: absent
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"

- name: Compile Apache 
  shell: cd {{ apache_last_version }} &&
                ./configure \
                --prefix={{ apache_home }} \
                --with-mpm=worker \
                --enable-so --enable-cache --enable-cache_disk \
                --enable-socache_memcache --enable-mod_dir \
                --enable-imagemap --enable-include \
                --enable-log_config --enable-logio --enable-log_debug \
                --enable-proxy --enable-access --enable-mime \
                --enable-rewrite --enable-alias --enable-deflate \
                --enable-expires --enable-headers --enable-status \
                --enable-ssl --enable-socache_shmcb --enable-setenvif --enable-socache_dbm \               
                --disable-actions --disable-env --disable-authz_dbm --disable-cgi \
                --disable-auth_digest --disable-authnz_ldap --disable-autoindex \
                --disable-asis --disable-cgid --disable-negotiation \ 
                --disable-userdir --disable-charset-lite \
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"

- name: Execute commands to install Apache.
  shell: cd {{ apache_last_version }} && make && umask 022 && make install && make clean
  when: "'{{ apache_version }}' not in '{{ apache_version_result.stdout }}'"