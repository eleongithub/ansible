---
- name : Check jdk versions directory exists
  stat:
    path: "{{ jdk_versions }}"
  register: jdk_versions_dir_exists

- name: Create jdk version directory
  file:
    path: "{{ jdk_versions }}"
    state: directory
  when: "not jdk_versions_dir_exists.stat.exists"

- name: Delete java home link
  file:
    dest: "{{ jdk_java_home }}"
    state: absent

- name: Get the machine architecture (32 bits or 64 bits)
  shell: getconf LONG_BIT || echo "Unknown architecture"
  register: os_architecture

- name: Download jdk 32 bits Archive
  get_url:
    url: "{{ jdk_32_url }}"
    dest: "/tmp/{{ jdk_tarball_name_32 }}"
  when: "os_architecture.stdout == '{{ jdk_os_32 }}'"

- name: Decompress jdk 32 bits Archive
  unarchive:
    src: "/tmp/{{ jdk_tarball_name_32 }}"
    dest: "{{ jdk_versions }}/"
  when: "os_architecture.stdout == '{{ jdk_os_32 }}'"

- name: Delete jdk 32 bits Archive
  file:
    path: "/tmp/{{ jdk_tarball_name_32 }}"
    state: absent
  when: "os_architecture.stdout == '{{ jdk_os_32 }}'"

- name: Download jdk 64 bits Archive
  get_url:
    url: "{{ jdk_64_url }}"
    dest: "/tmp/{{ jdk_tarball_name_64 }}"
  when: "os_architecture.stdout == '{{ jdk_os_64 }}'"

- name: Decompress jdk 64 bits Archive
  unarchive:
    src: "/tmp/{{ jdk_tarball_name_64 }}"
    dest: "{{ jdk_versions }}/"
  when: "os_architecture.stdout == '{{ jdk_os_64 }}'"

- name: Delete jdk 64 bits Archive
  file:
    path: "/tmp/{{ jdk_tarball_name_64 }}"
    state: absent
  when: "os_architecture.stdout == '{{ jdk_os_64 }}'"

- name: Create link to the jdk directory
  file:
    src: "{{ jdk_last_version }}"
    dest: "{{ jdk_java_home }}"
    state: link
    
- name: Add/Update environments variables
  blockinfile:
    dest: "/etc/profile"
    insertafter: EOF
    block: |
      # Java Home
      JAVA_HOME="{{ jdk_java_home }}"
      export JAVA_HOME
      # Update PATH
      PATH=$PATH:"$JAVA_HOME/bin"
      export PATH
    state: present

- name: Relaod environments variables
  shell: . /etc/profile
  
# - name: Update alternatives
#   command: "{{ item }}"
#   with_items:
#     - update-alternatives --install /usr/bin/java java {{ java_home }}/bin/java 1
#     - update-alternatives --install /usr/bin/javac javac {{ java_home }}/bin/javac 1
#     - update-alternatives --install /usr/bin/jar jar {{ java_home }}/bin/jar 1
#     - update-alternatives --set java {{ java_home }}/bin/java
#     - update-alternatives --set javac {{ java_home }}/bin/javac
#     - update-alternatives --set jar {{ java_home }}/bin/jar