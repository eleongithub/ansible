---
# tasks file for sonarqube

- name: Create sonarqube install directory
  file:
    path: "{{ sonarqube_install_directory }}"
    state: directory
    owner: root
    group: root

- name: Download, decompress and delete sonarqube archive
  unarchive:
    src: "{{ sonarqube_download_archive_url }}"
    dest: "{{ sonarqube_install_directory }}/"
    remote_src: True
  when: ansible_version.major|int >= 2

- name: Download sonarqube archive
  get_url:
    url: "{{ sonarqube_download_archive_url }}"
    dest: "/tmp/{{ sonarqube_archive_name }}"
  when: ansible_version.major|int < 2

- name: Decompress sonarqube archive
  unarchive:
    src: "/tmp/{{ sonarqube_archive_name }}"
    dest: "{{ sonarqube_install_directory }}/"
  when: ansible_version.major|int < 2

- name: Delete sonarqube archive
  file:
    path: "/tmp/{{ sonarqube_archive_name }}"
    state: absent
  when: ansible_version.major|int < 2

- name: Init database for sonarqube
  include: database.yml
  when: sonarqube_postgres_database_enabled

- name: Change the config of sonar web port
  lineinfile: 
    dest: "{{ sonarqube_home }}/conf/sonar.properties" 
    regexp: "^#sonar.web.port=" 
    line: "sonar.web.port={{ sonarqube_web_port }}"
    state: present

- name: Create link to sonarqube init script shell
  file:
    src: "{{ sonarqube_home }}/bin/linux-x86-64/sonar.sh"
    path: "/usr/bin/sonar"
    state: link

- name: Copy init script shell
  copy:
    src: "sonar.sh"
    path: "/etc/init.d/sonar"
    owner: root
    group: root
    mode: 0755

- name: Add Iptables rules for sonarqube
  include: iptables.yml
  when: sonarqube_iptables_enabled

- name: Enable sonarqube service
  service:
    name: sonar
    enabled: yes

- name: Restart sonarqube
  command: echo "Restart sonarqube service"
  notify:
    - Restart sonarqube